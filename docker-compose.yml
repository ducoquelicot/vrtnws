version: '3.7'
services:
  backend:
    build: .
    image: server:latest
    depends_on:
      - es01
    ports:
      - "8000:5000"
    networks:
      - backend_network
      - esnet
    # volumes:
    #   - .:/home/ec2-user
    environment: 
      ELASTICSEARCH_URL: http://es01:9200
      DATABASE_URL: mysql+pymysql://ec2-user:Dontsaveaprayerformenow@db:3306/datasets
  db:
    image: mysql:5.7
    restart: always
    environment: 
      MYSQL_DATABASE: datasets
      MYSQL_USER: ec2-user
      MYSQL_PASSWORD: Dontsaveaprayerformenow
      MYSQL_RANDOM_ROOT_PASSWORD: "yes"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - backend_network
  # kibana:
  #   image: docker.elastic.co/kibana/kibana:7.5.1
  #   volumes:
  #     - ./kibana.yml:/usr/share/kibana/config/kibana.yml
  #   ports:
  #     - 5601:5601
  #   networks:
  #     - esnet
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es01
    depends_on:
      - db
    environment:
      - node.name=es01
      - discovery.seed_hosts=es02
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - esdata01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
    networks:
      - esnet
  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.1
    container_name: es02
    environment:
      - node.name=es02
      - discovery.seed_hosts=es01
      - cluster.initial_master_nodes=es01,es02
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    volumes:
      - esdata02:/usr/share/elasticsearch/data
    networks:
      - esnet
  # nginx:
  #   image: nginx:mainline-alpine
  #   container_name: nginx
  #   restart: unless-stopped
  #   volumes:
  #     - web-root:/var/www/html
  #     - ./nginx-conf:/etc/nginx/conf.d
  #   network_mode: host

networks:
  esnet:
  backend_network:

volumes:
  db_data:
  esdata01:
    driver: local
  esdata02:
    driver: local
  # web-root:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     device: /home/ec2-user/test
  #     o: bind